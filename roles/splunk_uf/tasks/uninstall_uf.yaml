---
- name: Uninstall and clean up Splunk Forwarder
  hosts: librenms.local.lan,!splunk.local.lan
  vars:
    splunk_tmp_dir: '/tmp/Splunk'
    splunk_home_dir: '/opt/splunkforwarder'
    splunk_bin_file: '/opt/splunkforwarder/bin/splunk'

  tasks:

  - name: "Check if listed package is installed or not on Debian based servers"
    package: 
      name: splunkforwarder
      state: present
    check_mode: true
    register: package_check
    ignore_errors: true
    when: ansible_facts['distribution'] != 'CentOS'

  - name: "Check if listed package is installed or not on CentOS based servers"
    package: 
      name: splunkforwarder
      state: present
    check_mode: true
    register: package_check
    ignore_errors: true
    when: ansible_facts['distribution'] == 'CentOS'  

  - name: "Check if splunk home dir exists"
    stat:
      path: "{{ splunk_home_dir }}"
    register: splunk_home

  - name: "Check if splunk tmp dir exists"
    stat:
      path: "{{ splunk_tmp_dir }}"
    register: splunk_tmp

  - name: "Check if splunk binary exists"
    stat:
      path: "{{ splunk_bin_file }}"
    register: splunk_bin

  - block:
    - name: Stop splunk
      command: "{{ splunk_bin_file }} stop"
    - name: Disable splunk boot start
      command: "{{ splunk_bin_file }} disable boot-start"
    become: true
    ignore_errors: true
    when: splunk_bin.stat.exists

  - name: Uninstall Splunk UF Package - CentOS
    yum:
      name: splunkforwarder
      state: absent
    become: true
    when:
      - ansible_facts['distribution'] == "CentOS"
      - package_check is succeeded
   
  - name: Uninstall Splunk UF Package - Non CentOS
    apt:
      name: splunkforwarder
      state: absent
    become: true
    when:
      - ansible_facts['distribution'] != "CentOS"
      - package_check is succeeded

  - name: Clean up splunk_home
    ansible.builtin.file:
      path: "{{ splunk_home_dir }}"
      state: absent
    become: true
    when: splunk_home.stat.exists

  - name: Clean up splunk tmp install folder
    ansible.builtin.file:
      path: "{{ splunk_tmp_dir }}"
      state: absent
    become: true
    when: splunk_tmp.stat.exists